// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/coin/messages.proto

package coin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListCoinsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCoinsRequest) Reset() {
	*x = ListCoinsRequest{}
	mi := &file_api_coin_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCoinsRequest) ProtoMessage() {}

func (x *ListCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_coin_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCoinsRequest.ProtoReflect.Descriptor instead.
func (*ListCoinsRequest) Descriptor() ([]byte, []int) {
	return file_api_coin_messages_proto_rawDescGZIP(), []int{0}
}

type ListCoinsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Список монет
	Currencies    []*Currency `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCoinsResponse) Reset() {
	*x = ListCoinsResponse{}
	mi := &file_api_coin_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCoinsResponse) ProtoMessage() {}

func (x *ListCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_coin_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCoinsResponse.ProtoReflect.Descriptor instead.
func (*ListCoinsResponse) Descriptor() ([]byte, []int) {
	return file_api_coin_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ListCoinsResponse) GetCurrencies() []*Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type Currency struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Symbol        string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Quote         map[string]*Quote      `protobuf:"bytes,4,rep,name=quote,proto3" json:"quote,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Currency) Reset() {
	*x = Currency{}
	mi := &file_api_coin_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_api_coin_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_api_coin_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Currency) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Currency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Currency) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Currency) GetQuote() map[string]*Quote {
	if x != nil {
		return x.Quote
	}
	return nil
}

type GetQuoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuoteRequest) Reset() {
	*x = GetQuoteRequest{}
	mi := &file_api_coin_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteRequest) ProtoMessage() {}

func (x *GetQuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_coin_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteRequest.ProtoReflect.Descriptor instead.
func (*GetQuoteRequest) Descriptor() ([]byte, []int) {
	return file_api_coin_messages_proto_rawDescGZIP(), []int{3}
}

func (x *GetQuoteRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetQuoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Quotes        []*Quote               `protobuf:"bytes,2,rep,name=quotes,proto3" json:"quotes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuoteResponse) Reset() {
	*x = GetQuoteResponse{}
	mi := &file_api_coin_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuoteResponse) ProtoMessage() {}

func (x *GetQuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_coin_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuoteResponse.ProtoReflect.Descriptor instead.
func (*GetQuoteResponse) Descriptor() ([]byte, []int) {
	return file_api_coin_messages_proto_rawDescGZIP(), []int{4}
}

func (x *GetQuoteResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetQuoteResponse) GetQuotes() []*Quote {
	if x != nil {
		return x.Quotes
	}
	return nil
}

type Quote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         float32                `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	LastUpdated   string                 `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Quote) Reset() {
	*x = Quote{}
	mi := &file_api_coin_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quote) ProtoMessage() {}

func (x *Quote) ProtoReflect() protoreflect.Message {
	mi := &file_api_coin_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quote.ProtoReflect.Descriptor instead.
func (*Quote) Descriptor() ([]byte, []int) {
	return file_api_coin_messages_proto_rawDescGZIP(), []int{5}
}

func (x *Quote) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Quote) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

var File_api_coin_messages_proto protoreflect.FileDescriptor

const file_api_coin_messages_proto_rawDesc = "" +
	"\n" +
	"\x17api/coin/messages.proto\x120github.unless24.coin.server.protobuf.api.coin.v1\"\x12\n" +
	"\x10ListCoinsRequest\"o\n" +
	"\x11ListCoinsResponse\x12Z\n" +
	"\n" +
	"currencies\x18\x01 \x03(\v2:.github.unless24.coin.server.protobuf.api.coin.v1.CurrencyR\n" +
	"currencies\"\x96\x02\n" +
	"\bCurrency\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\x12[\n" +
	"\x05quote\x18\x04 \x03(\v2E.github.unless24.coin.server.protobuf.api.coin.v1.Currency.QuoteEntryR\x05quote\x1aq\n" +
	"\n" +
	"QuoteEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12M\n" +
	"\x05value\x18\x02 \x01(\v27.github.unless24.coin.server.protobuf.api.coin.v1.QuoteR\x05value:\x028\x01\"%\n" +
	"\x0fGetQuoteRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"w\n" +
	"\x10GetQuoteResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12O\n" +
	"\x06quotes\x18\x02 \x03(\v27.github.unless24.coin.server.protobuf.api.coin.v1.QuoteR\x06quotes\"@\n" +
	"\x05Quote\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x02R\x05price\x12!\n" +
	"\flast_updated\x18\x03 \x01(\tR\vlastUpdatedB\xbe\x02\n" +
	"4com.github.unless24.coin.server.protobuf.api.coin.v1B\rMessagesProtoP\x01Z\fpkg/api/coin\xa2\x02\aGUCSPAC\xaa\x020Github.Unless24.Coin.Server.Protobuf.Api.Coin.V1\xca\x020Github\\Unless24\\Coin\\Server\\Protobuf\\Api\\Coin\\V1\xe2\x02<Github\\Unless24\\Coin\\Server\\Protobuf\\Api\\Coin\\V1\\GPBMetadata\xea\x027Github::Unless24::Coin::Server::Protobuf::Api::Coin::V1b\x06proto3"

var (
	file_api_coin_messages_proto_rawDescOnce sync.Once
	file_api_coin_messages_proto_rawDescData []byte
)

func file_api_coin_messages_proto_rawDescGZIP() []byte {
	file_api_coin_messages_proto_rawDescOnce.Do(func() {
		file_api_coin_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_coin_messages_proto_rawDesc), len(file_api_coin_messages_proto_rawDesc)))
	})
	return file_api_coin_messages_proto_rawDescData
}

var file_api_coin_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_coin_messages_proto_goTypes = []any{
	(*ListCoinsRequest)(nil),  // 0: github.unless24.coin.server.protobuf.api.coin.v1.ListCoinsRequest
	(*ListCoinsResponse)(nil), // 1: github.unless24.coin.server.protobuf.api.coin.v1.ListCoinsResponse
	(*Currency)(nil),          // 2: github.unless24.coin.server.protobuf.api.coin.v1.Currency
	(*GetQuoteRequest)(nil),   // 3: github.unless24.coin.server.protobuf.api.coin.v1.GetQuoteRequest
	(*GetQuoteResponse)(nil),  // 4: github.unless24.coin.server.protobuf.api.coin.v1.GetQuoteResponse
	(*Quote)(nil),             // 5: github.unless24.coin.server.protobuf.api.coin.v1.Quote
	nil,                       // 6: github.unless24.coin.server.protobuf.api.coin.v1.Currency.QuoteEntry
}
var file_api_coin_messages_proto_depIdxs = []int32{
	2, // 0: github.unless24.coin.server.protobuf.api.coin.v1.ListCoinsResponse.currencies:type_name -> github.unless24.coin.server.protobuf.api.coin.v1.Currency
	6, // 1: github.unless24.coin.server.protobuf.api.coin.v1.Currency.quote:type_name -> github.unless24.coin.server.protobuf.api.coin.v1.Currency.QuoteEntry
	5, // 2: github.unless24.coin.server.protobuf.api.coin.v1.GetQuoteResponse.quotes:type_name -> github.unless24.coin.server.protobuf.api.coin.v1.Quote
	5, // 3: github.unless24.coin.server.protobuf.api.coin.v1.Currency.QuoteEntry.value:type_name -> github.unless24.coin.server.protobuf.api.coin.v1.Quote
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_coin_messages_proto_init() }
func file_api_coin_messages_proto_init() {
	if File_api_coin_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_coin_messages_proto_rawDesc), len(file_api_coin_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_coin_messages_proto_goTypes,
		DependencyIndexes: file_api_coin_messages_proto_depIdxs,
		MessageInfos:      file_api_coin_messages_proto_msgTypes,
	}.Build()
	File_api_coin_messages_proto = out.File
	file_api_coin_messages_proto_goTypes = nil
	file_api_coin_messages_proto_depIdxs = nil
}
